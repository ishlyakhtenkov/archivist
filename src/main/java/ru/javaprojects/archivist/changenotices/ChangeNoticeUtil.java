package ru.javaprojects.archivist.changenotices;

import lombok.experimental.UtilityClass;
import ru.javaprojects.archivist.changenotices.model.ChangeNotice;
import ru.javaprojects.archivist.changenotices.to.ChangeNoticeTo;
import ru.javaprojects.archivist.documents.model.ContentFile;
import ru.javaprojects.archivist.users.User;
import ru.javaprojects.archivist.users.UserTo;

@UtilityClass
public class ChangeNoticeUtil {

    public static ChangeNotice createNewFromTo(ChangeNoticeTo changeNoticeTo) {
        return new ChangeNotice(null, changeNoticeTo.getName(), changeNoticeTo.getReleaseDate(),
                changeNoticeTo.getChangeReasonCode(), changeNoticeTo.getDeveloper(), createContentFile(changeNoticeTo));
    }

    public static ChangeNotice updateFromTo(ChangeNotice changeNotice, ChangeNoticeTo changeNoticeTo) {
        changeNotice.setName(changeNoticeTo.getName());
        changeNotice.setReleaseDate(changeNoticeTo.getReleaseDate());
        changeNotice.setChangeReasonCode(changeNoticeTo.getChangeReasonCode());
        changeNotice.setDeveloper(changeNoticeTo.getDeveloper());
        changeNotice.setAutoGenerated(false);
        if (changeNoticeTo.getFile() != null) {
            changeNotice.setFile(createContentFile(changeNoticeTo));
        }
        return changeNotice;
    }

    public static ChangeNoticeTo asTo(ChangeNotice changeNotice) {
        return new ChangeNoticeTo(changeNotice.getId(), changeNotice.getName(), changeNotice.getReleaseDate(),
                changeNotice.getChangeReasonCode(), changeNotice.getDeveloper());
    }

    private static ContentFile createContentFile(ChangeNoticeTo changeNoticeTo) {
        String filename = changeNoticeTo.getFile().getOriginalFilename();
        return new ContentFile(filename, changeNoticeTo.getName() + "/" + filename);
    }
}
