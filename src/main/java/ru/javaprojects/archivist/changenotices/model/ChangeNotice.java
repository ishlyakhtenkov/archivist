package ru.javaprojects.archivist.changenotices.model;

import jakarta.persistence.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import ru.javaprojects.archivist.common.HasId;
import ru.javaprojects.archivist.common.model.NamedEntity;
import ru.javaprojects.archivist.common.util.validation.NotAutoGenerated;
import ru.javaprojects.archivist.departments.Department;
import ru.javaprojects.archivist.documents.model.ContentFile;

import java.time.LocalDate;

@Entity
@Table(name = "change_notices", uniqueConstraints = @UniqueConstraint(columnNames = "name", name = "change_notices_unique_name_idx"))
@Getter
@Setter
@NoArgsConstructor
public class ChangeNotice extends NamedEntity implements HasId {

    @NotNull
    @Column(name = "release_date")
    private LocalDate releaseDate;

    @NotNull(groups = NotAutoGenerated.class)
    @Enumerated(EnumType.STRING)
    @Column(name = "change_reason_code")
    private ChangeReasonCode changeReasonCode;

    @Column(name = "auto_generated", nullable = false, columnDefinition = "bool default false")
    private boolean autoGenerated = false;

    @NotNull(groups = NotAutoGenerated.class)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "developer_id")
    private Department developer;

    @NotNull(groups = NotAutoGenerated.class)
    @Embedded
    @Valid
    private ContentFile file;

    public static ChangeNotice autoGenerate(String name, LocalDate releaseDate) {
        ChangeNotice changeNotice = new ChangeNotice();
        changeNotice.setName(name);
        changeNotice.setReleaseDate(releaseDate);
        changeNotice.setAutoGenerated(true);
        return changeNotice;
    }
}
