package ru.javaprojects.archivist.changenotices.repository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.EntityGraph;
import org.springframework.transaction.annotation.Transactional;
import ru.javaprojects.archivist.changenotices.model.ChangeNotice;
import ru.javaprojects.archivist.common.NamedRepository;

import java.util.Optional;

@Transactional(readOnly = true)
public interface ChangeNoticeRepository extends NamedRepository<ChangeNotice> {

    Page<ChangeNotice> findAllByAutoGeneratedIsFalseOrderByName(Pageable pageable);

    Page<ChangeNotice> findAllByNameContainsIgnoreCaseAndAutoGeneratedIsFalseOrderByName(Pageable pageable, String keyword);

    @EntityGraph(attributePaths = "developer")
    Optional<ChangeNotice> findById(long id);

    @EntityGraph(attributePaths = "changes")
    Optional<ChangeNotice> findWithChangesById(long id);

    Optional<ChangeNotice> findByNameAndAutoGeneratedIsTrueIgnoreCase(String name);
}
